<% 
	context_menu = [
		{
			:key => :edit, 
			:name => 'Edit this scope', 
			:url => url_for([:edit,@model]),
			:options => {
				:container_class => 'menu'
			}
		},
		{
			:key => :new, 
			:name => 'New experiment', 
			:url => url_for([:new,@model,:experiment]),
			:options => {
				:container_class => 'menu',
				:class => "btn"
			}
		},
		{
			:key => :index, 
			:name => 'Goto scopes\' index', 
			:url => models_path,
			:options => {
				:container_class => 'menu',
				:class => "text"
		}}]
	menu = nil
	content_for(:context_menu) { menu = render_navigation :items => context_menu }
%>
<% content_for(:title) { "Scope's detail" } %>

<h1><%= @model.title %> (scope)</h1>

<h3>Description:</h3>
<p>
  <%= simple_format @model.description %>
</p>

<h3>Listing <%= pluralize(@model.experiments.length, 'experiment')%></h3>

<%= 
	collection_table(@model.experiments, :id => 'experiments' , :class => 'formatted dataTable') do |t|
		t.header :title
		t.header :description
		t.header :show_h,		"", class: "no-sort"
		t.header :exp_h,		"", class: "no-sort"
		t.header :edit_h,		"", class: "no-sort"
		t.header :destroy_h,	"", class: "no-sort"

		t.rows.alternate = :odd
    	t.rows.each do |row, experiment, index|
			# Notice there's no need to explicitly define the title
			row.title			experiment.title
			row.description		experiment.description
			row.show_h			link_to 'show', [@model,experiment]
			row.edit_h			link_to 'edit', [:edit,@model,experiment]
			row.exp_h			link_to 'download .exp' , model_experiment_path(@model,experiment,:format => :exp)
			row.destroy_h		link_to 'remove', [@model,experiment], confirm: 'Are you sure?', method: :delete
		end
	end
%>

<div class="menu">
	<%= menu %>
</div>

<h3>All <%= pluralize(@measurements.length, 'measurement')%> in <%= pluralize(@model.experiments.length, 'experiment')%></h3>

<%= 
	collection_table(@measurements, :id => 'measurements' , :class => 'formatted dataTable') do |t|
		t.header :experiment
		t.header :title
		t.header :date
		t.header :show_h,		"", class: "no-sort"
		t.header :regression_h,	"", class: "no-sort"
		t.header :csv,			"", class: "no-sort"

		t.rows.alternate = :odd
    	t.rows.each do |row, measure, index|
			# Notice there's no need to explicitly define the title
			row.experiment		measure.experiment.title
			row.title			measure.title
			row.date			measure.date
			row.regression_h	link_to 'regression', [:regression,measure.experiment,measure]
			row.show_h			link_to 'show', [measure.experiment,measure]
			row.csv				link_to 'download .csv', experiment_measurement_path(measure.experiment,measure, :format => :csv)
		end
	end
%>