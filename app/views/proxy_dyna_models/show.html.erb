<% 
	javascript 'https://www.google.com/jsapi'
	
	context_menu = [
		{
			:key => :edit, 
			:name => 'Edit this proxy dyna model', 
			:url => url_for([:edit,@proxy_dyna_model]),
			:options => {
				:if => Proc.new { can?(:calculate, @proxy_dyna_model) },
				:container_class => 'menu',
				:class => "text"
			}
		},
		{
			:key => :index, 
			:name => 'Goto measurement', 
			:url => url_for([@proxy_dyna_model.measurement.experiment,@proxy_dyna_model.measurement]),
			:options => {
				:unless => Proc.new { @proxy_dyna_model.measurement.nil? },
				:container_class => 'menu',
				:class => ("text" if can?(:calculate, @proxy_dyna_model))
			}
		},
		{
			:key => :model, 
			:name => 'Goto dyna model', 
			:url => url_for([@proxy_dyna_model.dyna_model]),
			:options => {
				:container_class => 'menu',
				:class => "text"
			}
		}
		]
	menu = nil
	content_for(:context_menu) { menu = render_navigation :items => context_menu }
%>
<% content_for(:title) { "Dyna Model's detail" } %>

<h1><%= @proxy_dyna_model.title_join %></h1>

<% if !@proxy_dyna_model.measurement.nil? %>
<h3><%= @proxy_dyna_model.measurement.model.title %> model's description for <%= @proxy_dyna_model.measurement.title %> measurement:</h3>
<p>
	<%= simple_format (show (@proxy_dyna_model.measurement.model.description)) %>
</p>

<% end%>
<h3>Description</h3>

<p>
  <%= simple_format (show (@proxy_dyna_model.dyna_model.description)) %>
</p>

<%- if @proxy_dyna_model.no_death_phase || @proxy_dyna_model.log_flag%>
<h3>Options</h3>
<p>
<%- if @proxy_dyna_model.no_death_phase %>
  Does not include death phase<br/>
  ##############################<br/>
  <%- end 	%>
  <%- if @proxy_dyna_model.log_flag %>
  Estimation is performed on log scale<br/>
  ##############################<br/>
  <%- end 	%>
</p>
<%- end %>

<h3>Listing <%= pluralize(@proxy_dyna_model.dyna_model.params.length, 'parameter')%></h3>

<%= form_tag( calculate_proxy_dyna_model_path(@proxy_dyna_model) , method: :put) do |f| %>

	<div class="one_tab">
		<%= collection_table(@proxy_dyna_model.proxy_params , :class => 'formatted dataTable') do |t| 
			t.header :title
			t.header :value, "Estimated parameter"
			t.header :description
			t.header :bottom, "Bottom range for estimation"
			t.header :top, "Top range for estimation"
		
			t.rows.alternate = :odd
			t.rows.each do |row, param, index|
				row.title 	param.param.human_title.html_safe
				row.value	param.value, :class => "highlight"
				row.description	param.param.description
				row.bottom 	range_value(param.bottom,param,'_bottom')
				row.top 	range_value(param.top,param,'_top')
			end
		end %>
	</div>
	
<div class="action text-center">
	<table class="formatted dataTable">
		<thead>
			<tr>
				<th class="no-sort" scope="col">RMSE</th>
				<th class="no-sort" scope="col">R<sup>2</sup></th>
				<th class="no-sort" scope="col">Bias</th>
				<th class="no-sort" scope="col">Accuracy</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td><%= @proxy_dyna_model.rmse%></td>
				<td><%= @proxy_dyna_model.r_square%></td>
				<td><%= @proxy_dyna_model.bias%></td>
				<td><%= @proxy_dyna_model.accuracy%></td>
			</tr>
		</tbody>
	</table>
	<%- if can? :calculate, @proxy_dyna_model %>
	<%= button_tag "Recalculate Parameters" , disable_with: "calculating, please wait..." %>
	<%- end %>
</div>

<% end %>

<div class="menu">
	<%= menu %>
</div>

<%- if !@proxy_dyna_model.rmse.nil? || !@proxy_dyna_model.rmse.blank? %>
<h3><%= @proxy_dyna_model.dyna_model.title %>'s Curve</h3>

<div style="display:none;" class="proxy_dyna_model_chart auto-load" >	
	<div class="chart">
		 <br/>
		 <div class="one_tab">loading...</div>
	</div>
	<div class="options" style="display:none;text-align: right;"><a class="download" href='#'>Download chart as .svg</a></div>
	<div style="display:none;" class="model-data">
		<div data-source="<%= proxy_dyna_model_path(@proxy_dyna_model, :format => :json) %>"><%=@proxy_dyna_model.title%></div>
	</div>
	<div style="display:none;" class="measurement-data">
		<% if @proxy_dyna_model.measurement.nil? %>
		<% @proxy_dyna_model.experiment.measurements.each do |m| %>
		<div data-source="<%= experiment_measurement_path(@proxy_dyna_model.experiment,m,:format=>:json,log: @proxy_dyna_model.log_flag) %>"><%= m.title %></div>
		<% end %>
		<% else %>
		<div data-source="<%= experiment_measurement_path(@experiment,@measurement,:format=>:json,log: @proxy_dyna_model.log_flag) %>"><%= @measurement.title %></div>
		<% end %> 
	</div>

</div>
<%- end %>




