<% 
	javascript 'https://www.google.com/jsapi'

	context_menu = [
		{
			:key => :new, 
			:name => 'New measurement', 
			:url => url_for([:new,@experiment,:measurement]),
			:options => {
				:if => Proc.new { can?(:update, @experiment) },
				:container_class => 'menu'
			}
		},
		{
			:key => :edit, 
			:name => 'Edit', 
			:url => url_for([:edit,@model,@experiment]),
			:options => {
				:if => Proc.new { can?(:update, @experiment) },
				:container_class => 'menu',
				class: "text"
			}
		},
		{
			:key => :model, 
			:name => 'Goto model', 
			:url => model_path(@experiment.model),
			:options => {
				:container_class => 'menu',
				:class => ("text" if can?(:update, @experiment))
			}
		}
		]
	menu = nil
	content_for(:context_menu) { menu = render_navigation :items => context_menu }
%>

<h1><%= @experiment.title %> (experiment)</h1>

<h4>Using <%= @model.title %> scope</h4>
<p>
	<%= show (simple_format @model.description )%>
</p>

<h3>Experiment Description</h3>
<p>
  <%= simple_format( show @experiment.description) %>
</p>

<h3>Listing <%= pluralize(@experiment.measurements.length, 'measurement')%></h3>

<%= 
	collection_table(@experiment.measurements, :id => 'measurements' , :class => 'formatted dataTable-complex') do |t|
		t.header :title
		t.header :date
		t.header :show_h,		"", class: "no-sort"
		t.header :csv,			"", class: "no-sort"
		t.header :edit_h,		"", class: "no-sort"
		t.header :destroy_h,	"", class: "no-sort"
		t.header :regression_h,	"", class: "no-sort"


		t.rows.alternate = :odd
    	t.rows.each do |row, measurement, index|
			# Notice there's no need to explicitly define the title
			row.title			measurement.title
			row.date			measurement.date
			row.show_h			link_to t('action.show').downcase, [@experiment,measurement] if can? :read, measurement
			row.edit_h			link_to t('action.edit').downcase, [:edit,@experiment,measurement] if can? :update, measurement
			row.destroy_h		link_to t('action.remove').downcase, [@experiment,measurement], confirm: 'Are you sure?', method: :delete if can? :update, measurement
			row.regression_h	link_to 'regression', [:regression,@experiment,measurement] if can? :update, measurement
			row.csv				link_to 'download .csv', experiment_measurement_path(@experiment,measurement, :format => :csv)
		end
	end
%>

<div class="menu">
	<%= menu %>
</div>

<h3>Measurements chart</h3>

<div style="display:none;" class="proxy_dyna_model_chart auto-load" >	
	<div class="chart">
		 <br/>
		 <div class="one_tab">loading...</div>
	</div>
	<div class="options" style="display:none;text-align: right;"><a class="download" href='#'>Download chart as .svg</a></div>
	<div style="display:none;" class="measurement-data">
		<% @experiment.measurements.each do |m| %>
		<div data-source="<%= experiment_measurement_path(@experiment,m,:format=>:json) %>"><%= m.title%></div>
		<% end %> 
	</div>

</div>
