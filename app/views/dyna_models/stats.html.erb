<% 
	javascript 'https://www.google.com/jsapi'

	context_menu = [
		{
			:key => :show, 
			:name => t('navigation.show' , model: DynaModel.model_name.human.downcase), 
			:url => dyna_model_path(@dynamodel),
			:options => {
				:container_class => 'menu'
			}
		},
		{
			:key => :edit, 
			:name => t('action.download_data'), 
			:url => stats_dyna_model_path(@dynamodel, :format => :csv),
			:options => {
				:container_class => 'menu'
			}
		},
		{
			:key => :back, 
			:name => t('navigation.back'), 
			:url => url_for(:back),
			:options => {
				:unless => Proc.new { url_for(:back) == "javascript:history.back()" },
				:container_class => 'menu',
				:class => "text"
			}
		},
		{
			:key => :home, 
			:name => t('navigation.goto' , destination: t('navigation.index' , model: DynaModel.model_name.human).downcase), 
			:url => dyna_models_url,
			:options => {
				:if => Proc.new { url_for(:back) == "javascript:history.back()" },
				:container_class => 'menu',
				:class => "text"
			}
		}]
	menu = nil
	content_for(:context_menu) { menu = render_navigation :items => context_menu }
%>
<% content_for(:title) { t('title.dyna_model.stats' , model: DynaModel.model_name.human) } %>
<p id="notice"><%= notice %></p>

<h1><%= @dyna_model.title %></h1>

<h3>Description:</h3>
<p>
  <%= simple_format (show (@dyna_model.description)) %>
</p>

<h3>Listing <%= pluralize(@dyna_model.params.length, 'parameter')%></h3>

<%= 
	collection_table(@dyna_model.params, :id => 'params' , :class => 'formatted dataTable') do |t|
		t.header :code
		t.header :human_title
		t.header :description

		t.rows.alternate = :odd
    	t.rows.each do |row, param, index|
			# Notice there's no need to explicitly define the title
			row.code			param.code
			row.human_title		param.human_title
			row.description		param.description_trimmed.gsub(/\n/, '<br/>')
		end
	end
%>

<div class="menu">
	<%= menu %>
</div>


<h3><%= Model.model_name.human.pluralize%></h3>

<h3><%= Experiment.model_name.human.pluralize%></h3>
	<% @experiments.take(1).each do |e| %>
	<% next unless (proxy_dyna_models = ProxyDynaModel.joins(:measurement => :experiment).where('measurements.experiment_id' => e.id, :dyna_model_id => @dyna_model.id).group('proxy_dyna_models.id')) %>
	<% p_dm_average = e.get_average_proxy_dyna_model(proxy_dyna_models) %>
	
	<h4><i><%= e.title %></i> <%= Experiment.model_name.human.downcase %> <%= t('dyna_models.stats.belongs')%> <i><%= e.model.title %></i> <%= Model.model_name.human.downcase%></h4>
	
	<div class="one_tab">
		<div>
		<div>
			<h5 class="button"><%= t('dyna_models.stats.average_params')%> <span class="dim">(<%= t('dyna_models.stats.click_hide')%>)</span></h5>
			<div class="toggle" style="display:none;">
				<dl>
					<dt><%= t('dyna_models.stats.rmse')%>:</dt>
					<dd><%=p_dm_average.rmse%> +/- <%= p_dm_average.rmse_stdev%></dd>
					<dt><%= t('dyna_models.stats.bias')%>:</dt>
					<dd><%=p_dm_average.bias%> +/- <%= p_dm_average.bias_stdev%></dd>
					<dt><%= t('dyna_models.stats.accu')%>:</dt>
					<dd><%=p_dm_average.accuracy%> +/- <%= p_dm_average.accuracy_stdev%></dd>
				</dl>
	
				<%= 
				collection_table(p_dm_average.proxy_params, :id => 'params' , :class => 'formatted dataTable') do |t|
					t.header :human_title
					t.header :description
					t.header :mean,	t('dyna_models.stats.mean')
					t.header :std_dev
					t.header :count
					
					t.rows.alternate = :odd
			    	t.rows.each do |row, param, index|
						# Notice there's no need to explicitly define the title
						row.human_title		param.param.human_title
						row.description		param.param.description_trimmed.gsub(/\n/, '<br/>')
						row.mean			param.mean
						row.std_dev			param.std_dev
						row.count			param.count
					end
				end
				%>
			</div>
		</div>
		<h5 class="button"><%= t('aux.chart')%> <span  class="dim">(<%= t('dyna_models.stats.click_hide')%>)</span></h5>
		<div style="display:none;" class="toggle proxy_dyna_model_chart" >
			<div class="chart">
				<%= t('aux.loading').downcase%>
			</div>
			<div class="options" style="display:none;text-align: right;"><a class="download" href='#'><%= t('aux.download_chart')%></a></div>
			<div style="display:none;" class="model-data">
				<div data-source="<%= proxy_dyna_model_path(p_dm_average, :format => :json) %>"><%= p_dm_average.dyna_model.title %></div>
			</div>
			<div style="display:none;" class="measurement-data">
				<% e.measurements.each do |m| %> 
				<div data-source="<%= experiment_measurement_path(e,m,:format=>:json) %>"></div>
				<% end %>
			</div>
		</div>
		</div>
	<div>		
		<h5 class="button"><%= Measurement.model_name.human.pluralize%>  <span class="dim">(<%= t('dyna_models.stats.click_hide')%>)</span></h5>

		<% @dyna_model.proxy_dyna_models.collect {|p| if (p.measurement && p.measurement.experiment == e) then p.measurement end }.compact.each do |m| %>
		<% next unless (proxy_dyna_models = m.proxy_dyna_models.find_all { |p| p.dyna_model == @dyna_model }) %>
		
		
		<% proxy_dyna_models.each do |p_dm| %>
		<div class="toggle one_tab" style="display:none;">
			<h4><i><%= m.title %></i> <%= Measurement.model_name.human.downcase%> <%= t('dyna_models.stats.belongs')%> <i><%= m.model.title %></i> <%= Model.model_name.human.downcase%></h4>

			<div>
				<h5 class="button"><%= t('dyna_models.stats.updated')%> at <%=p_dm.updated_at %> <span style="color:#bbbbbb">(<%= t('dyna_models.stats.click_hide')%>)<span></h5>
				<div class="toggle" style="display:none;">
				<dl>
					<dt><%= t('dyna_models.stats.rmse')%>:</dt>
					<dd><%=p_dm.rmse%></dd>
					<dt><%= t('dyna_models.stats.bias')%>:</dt>
					<dd><%=p_dm.bias%></dd>
					<dt><%= t('dyna_models.stats.accu')%>:</dt>
					<dd><%=p_dm.accuracy%></dd>
				</dl>
				<%= 
				collection_table(p_dm.proxy_params, :id => 'params' , :class => 'formatted dataTable') do |t|
					t.header :human_title
					t.header :description
					t.header :value
			
					t.rows.alternate = :odd
			    	t.rows.each do |row, param, index|
						# Notice there's no need to explicitly define the title
						row.human_title		param.param.human_title
						row.description		param.param.description_trimmed.gsub(/\n/, '<br/>')
						row.value			param.value
					end
				end
				%>
				</div>
			</div>
			<h5 class="button"><%= t('aux.chart')%> (<%= t('dyna_models.stats.click_hide')%>)</h5>
			<div style="display:none;" class="toggle proxy_dyna_model_chart" >
				<div class="chart">
					<%= t('aux.loading')%>
				</div>
				<div class="options" style="display:none;text-align: right;"><a class="download" href='#'><%= t('aux.download_chart')%></a></div>
				<div style="display:none;" class="model-data">
					<div data-source="<%= proxy_dyna_model_path(p_dm, :format => :json) %>"><%= p_dm.dyna_model.title %></div>
				</div>
				<div style="display:none;" class="measurement-data">
					<div data-source="<%= experiment_measurement_path(m.experiment,m,:format=>:json) %>"></div> 
				</div>
			</div>
		
		</div>
		<% end %>
	
	
	<% end %>
		</div>
	</div>

	
	
		
<% end %>

