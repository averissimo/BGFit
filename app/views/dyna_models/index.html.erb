<% 
	context_menu = [
		{
			:key => :new, 
			:name => t('navigation.new', model: DynaModel.model_name.human.downcase), 
			:url => new_dyna_model_path,
			:options => {
				:container_class => 'menu'
			}
		},
		{
			:key => :back, 
			:name => t('navigation.back'), 
			:url => url_for(:back),
			:options => {
				:unless => Proc.new { url_for(:back) == "javascript:history.back()" },
				:container_class => 'menu',
				:class => "text"
			}
		},
		{
			:key => :home, 
			:name => t('navigation.goto', destination: t('navigation.home').downcase), 
			:url => root_url,
			:options => {
				:if => Proc.new { url_for(:back) == "javascript:history.back()" },
				:container_class => 'menu',
				:class => "text"
			}
		}]
	menu = nil
	content_for(:context_menu) { menu = render_navigation :items => context_menu }
%>
<% content_for(:title) { t('title.index' , model: DynaModel.model_name.human) } %>

<h1><%= t('aux.listing')%> <%= pluralize(@dyna_models.length, DynaModel.model_name.human.downcase)%></h1>

<%= 
	collection_table(@dyna_models, :id => 'dyna_models' , :class => 'formatted dataTable dataTable') do |t|
		t.header :title,		DynaModel.human_attribute_name(:title)
		t.header :description,	DynaModel.human_attribute_name(:description)
		t.header :show_h,		"", class: "no-sort"
		t.header :edit_h,		"", class: "no-sort"
		t.header :destroy_h,	"", class: "no-sort"
		t.header :stats_h,		"", class: "no-sort" if @dyna_models.find { |d| can? :stats, d } 
		t.header :d_stats_h,	"", class: "no-sort" if @dyna_models.find { |d| can? :stats, d }
		t.header :estimate_h,	"", class: "no-sort" if @dyna_models.find { |d| can? :estimate, d }


		t.rows.alternate = :odd
    	t.rows.each do |row, dyna_model, index|
			# Notice there's no need to explicitly define the title
			row.title			word_wrap(dyna_model.title,:line_width => 40).gsub(/\n/, '<br/>')
			row.description		dyna_model.description_trimmed.gsub(/\n/, '<br/>')
			row.show_h			link_to t('action.show').downcase, dyna_model
			row.stats_h			link_to t('action.dyna_model.stats').downcase, [:stats,dyna_model] if can? :stats, dyna_model
			row.d_stats_h		link_to t('action.dyna_model.download_stats').downcase, stats_dyna_model_path(dyna_model, :format => :csv) if can? :stats, dyna_model
			row.estimate_h		link_to t('action.dyna_model.estimate_short').downcase, [:estimate,dyna_model] if can? :estimate, dyna_model
			row.edit_h			link_to t('action.edit').downcase, [:edit,dyna_model] if can? :edit, dyna_model
			row.destroy_h		link_to t('action.remove').downcase, dyna_model, confirm: t('action.confirm'), method: :delete if can? :destroy, dyna_model
		end
	end
%>

<div class="menu">
	<%= menu %>
</div>
